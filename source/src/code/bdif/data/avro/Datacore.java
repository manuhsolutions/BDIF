/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package code.bdif.data.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Datacore extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Datacore\",\"namespace\":\"code.dfi.data.avro\",\"fields\":[{\"name\":\"label\",\"type\":[\"string\",\"null\"]},{\"name\":\"vector\",\"type\":[\"string\",\"int\",\"float\",\"double\",\"long\",\"bytes\"]},{\"name\":\"lookupfieldpos\",\"type\":\"int\"},{\"name\":\"labelname\",\"type\":\"string\"},{\"name\":\"operationtype\",\"type\":\"string\"},{\"name\":\"filedesc\",\"type\":\"string\"},{\"name\":\"fulldesc\",\"type\":\"string\"},{\"name\":\"labeldesc\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence label;
  @Deprecated public java.lang.Object vector;
  @Deprecated public int lookupfieldpos;
  @Deprecated public java.lang.CharSequence labelname;
  @Deprecated public java.lang.CharSequence operationtype;
  @Deprecated public java.lang.CharSequence filedesc;
  @Deprecated public java.lang.CharSequence fulldesc;
  @Deprecated public java.lang.CharSequence labeldesc;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public Datacore() {}

  /**
   * All-args constructor.
   */
  public Datacore(java.lang.CharSequence label, java.lang.Object vector, java.lang.Integer lookupfieldpos, java.lang.CharSequence labelname, java.lang.CharSequence operationtype, java.lang.CharSequence filedesc, java.lang.CharSequence fulldesc, java.lang.CharSequence labeldesc) {
    this.label = label;
    this.vector = vector;
    this.lookupfieldpos = lookupfieldpos;
    this.labelname = labelname;
    this.operationtype = operationtype;
    this.filedesc = filedesc;
    this.fulldesc = fulldesc;
    this.labeldesc = labeldesc;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return label;
    case 1: return vector;
    case 2: return lookupfieldpos;
    case 3: return labelname;
    case 4: return operationtype;
    case 5: return filedesc;
    case 6: return fulldesc;
    case 7: return labeldesc;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: label = (java.lang.CharSequence)value$; break;
    case 1: vector = (java.lang.Object)value$; break;
    case 2: lookupfieldpos = (java.lang.Integer)value$; break;
    case 3: labelname = (java.lang.CharSequence)value$; break;
    case 4: operationtype = (java.lang.CharSequence)value$; break;
    case 5: filedesc = (java.lang.CharSequence)value$; break;
    case 6: fulldesc = (java.lang.CharSequence)value$; break;
    case 7: labeldesc = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'label' field.
   */
  public java.lang.CharSequence getLabel() {
    return label;
  }

  /**
   * Sets the value of the 'label' field.
   * @param value the value to set.
   */
  public void setLabel(java.lang.CharSequence value) {
    this.label = value;
  }

  /**
   * Gets the value of the 'vector' field.
   */
  public java.lang.Object getVector() {
    return vector;
  }

  /**
   * Sets the value of the 'vector' field.
   * @param value the value to set.
   */
  public void setVector(java.lang.Object value) {
    this.vector = value;
  }

  /**
   * Gets the value of the 'lookupfieldpos' field.
   */
  public java.lang.Integer getLookupfieldpos() {
    return lookupfieldpos;
  }

  /**
   * Sets the value of the 'lookupfieldpos' field.
   * @param value the value to set.
   */
  public void setLookupfieldpos(java.lang.Integer value) {
    this.lookupfieldpos = value;
  }

  /**
   * Gets the value of the 'labelname' field.
   */
  public java.lang.CharSequence getLabelname() {
    return labelname;
  }

  /**
   * Sets the value of the 'labelname' field.
   * @param value the value to set.
   */
  public void setLabelname(java.lang.CharSequence value) {
    this.labelname = value;
  }

  /**
   * Gets the value of the 'operationtype' field.
   */
  public java.lang.CharSequence getOperationtype() {
    return operationtype;
  }

  /**
   * Sets the value of the 'operationtype' field.
   * @param value the value to set.
   */
  public void setOperationtype(java.lang.CharSequence value) {
    this.operationtype = value;
  }

  /**
   * Gets the value of the 'filedesc' field.
   */
  public java.lang.CharSequence getFiledesc() {
    return filedesc;
  }

  /**
   * Sets the value of the 'filedesc' field.
   * @param value the value to set.
   */
  public void setFiledesc(java.lang.CharSequence value) {
    this.filedesc = value;
  }

  /**
   * Gets the value of the 'fulldesc' field.
   */
  public java.lang.CharSequence getFulldesc() {
    return fulldesc;
  }

  /**
   * Sets the value of the 'fulldesc' field.
   * @param value the value to set.
   */
  public void setFulldesc(java.lang.CharSequence value) {
    this.fulldesc = value;
  }

  /**
   * Gets the value of the 'labeldesc' field.
   */
  public java.lang.CharSequence getLabeldesc() {
    return labeldesc;
  }

  /**
   * Sets the value of the 'labeldesc' field.
   * @param value the value to set.
   */
  public void setLabeldesc(java.lang.CharSequence value) {
    this.labeldesc = value;
  }

  /** Creates a new Datacore RecordBuilder */
  public static code.bdif.data.avro.Datacore.Builder newBuilder() {
    return new code.bdif.data.avro.Datacore.Builder();
  }
  
  /** Creates a new Datacore RecordBuilder by copying an existing Builder */
  public static code.bdif.data.avro.Datacore.Builder newBuilder(code.bdif.data.avro.Datacore.Builder other) {
    return new code.bdif.data.avro.Datacore.Builder(other);
  }
  
  /** Creates a new Datacore RecordBuilder by copying an existing Datacore instance */
  public static code.bdif.data.avro.Datacore.Builder newBuilder(code.bdif.data.avro.Datacore other) {
    return new code.bdif.data.avro.Datacore.Builder(other);
  }
  
  /**
   * RecordBuilder for Datacore instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Datacore>
    implements org.apache.avro.data.RecordBuilder<Datacore> {

    private java.lang.CharSequence label;
    private java.lang.Object vector;
    private int lookupfieldpos;
    private java.lang.CharSequence labelname;
    private java.lang.CharSequence operationtype;
    private java.lang.CharSequence filedesc;
    private java.lang.CharSequence fulldesc;
    private java.lang.CharSequence labeldesc;

    /** Creates a new Builder */
    private Builder() {
      super(code.bdif.data.avro.Datacore.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(code.bdif.data.avro.Datacore.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.label)) {
        this.label = data().deepCopy(fields()[0].schema(), other.label);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vector)) {
        this.vector = data().deepCopy(fields()[1].schema(), other.vector);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lookupfieldpos)) {
        this.lookupfieldpos = data().deepCopy(fields()[2].schema(), other.lookupfieldpos);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.labelname)) {
        this.labelname = data().deepCopy(fields()[3].schema(), other.labelname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.operationtype)) {
        this.operationtype = data().deepCopy(fields()[4].schema(), other.operationtype);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.filedesc)) {
        this.filedesc = data().deepCopy(fields()[5].schema(), other.filedesc);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fulldesc)) {
        this.fulldesc = data().deepCopy(fields()[6].schema(), other.fulldesc);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.labeldesc)) {
        this.labeldesc = data().deepCopy(fields()[7].schema(), other.labeldesc);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Datacore instance */
    private Builder(code.bdif.data.avro.Datacore other) {
            super(code.bdif.data.avro.Datacore.SCHEMA$);
      if (isValidValue(fields()[0], other.label)) {
        this.label = data().deepCopy(fields()[0].schema(), other.label);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vector)) {
        this.vector = data().deepCopy(fields()[1].schema(), other.vector);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lookupfieldpos)) {
        this.lookupfieldpos = data().deepCopy(fields()[2].schema(), other.lookupfieldpos);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.labelname)) {
        this.labelname = data().deepCopy(fields()[3].schema(), other.labelname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.operationtype)) {
        this.operationtype = data().deepCopy(fields()[4].schema(), other.operationtype);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.filedesc)) {
        this.filedesc = data().deepCopy(fields()[5].schema(), other.filedesc);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fulldesc)) {
        this.fulldesc = data().deepCopy(fields()[6].schema(), other.fulldesc);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.labeldesc)) {
        this.labeldesc = data().deepCopy(fields()[7].schema(), other.labeldesc);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'label' field */
    public java.lang.CharSequence getLabel() {
      return label;
    }
    
    /** Sets the value of the 'label' field */
    public code.bdif.data.avro.Datacore.Builder setLabel(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.label = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'label' field has been set */
    public boolean hasLabel() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'label' field */
    public code.bdif.data.avro.Datacore.Builder clearLabel() {
      label = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'vector' field */
    public java.lang.Object getVector() {
      return vector;
    }
    
    /** Sets the value of the 'vector' field */
    public code.bdif.data.avro.Datacore.Builder setVector(java.lang.Object value) {
      validate(fields()[1], value);
      this.vector = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'vector' field has been set */
    public boolean hasVector() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'vector' field */
    public code.bdif.data.avro.Datacore.Builder clearVector() {
      vector = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'lookupfieldpos' field */
    public java.lang.Integer getLookupfieldpos() {
      return lookupfieldpos;
    }
    
    /** Sets the value of the 'lookupfieldpos' field */
    public code.bdif.data.avro.Datacore.Builder setLookupfieldpos(int value) {
      validate(fields()[2], value);
      this.lookupfieldpos = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'lookupfieldpos' field has been set */
    public boolean hasLookupfieldpos() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'lookupfieldpos' field */
    public code.bdif.data.avro.Datacore.Builder clearLookupfieldpos() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'labelname' field */
    public java.lang.CharSequence getLabelname() {
      return labelname;
    }
    
    /** Sets the value of the 'labelname' field */
    public code.bdif.data.avro.Datacore.Builder setLabelname(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.labelname = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'labelname' field has been set */
    public boolean hasLabelname() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'labelname' field */
    public code.bdif.data.avro.Datacore.Builder clearLabelname() {
      labelname = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'operationtype' field */
    public java.lang.CharSequence getOperationtype() {
      return operationtype;
    }
    
    /** Sets the value of the 'operationtype' field */
    public code.bdif.data.avro.Datacore.Builder setOperationtype(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.operationtype = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'operationtype' field has been set */
    public boolean hasOperationtype() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'operationtype' field */
    public code.bdif.data.avro.Datacore.Builder clearOperationtype() {
      operationtype = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'filedesc' field */
    public java.lang.CharSequence getFiledesc() {
      return filedesc;
    }
    
    /** Sets the value of the 'filedesc' field */
    public code.bdif.data.avro.Datacore.Builder setFiledesc(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.filedesc = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'filedesc' field has been set */
    public boolean hasFiledesc() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'filedesc' field */
    public code.bdif.data.avro.Datacore.Builder clearFiledesc() {
      filedesc = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'fulldesc' field */
    public java.lang.CharSequence getFulldesc() {
      return fulldesc;
    }
    
    /** Sets the value of the 'fulldesc' field */
    public code.bdif.data.avro.Datacore.Builder setFulldesc(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.fulldesc = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'fulldesc' field has been set */
    public boolean hasFulldesc() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'fulldesc' field */
    public code.bdif.data.avro.Datacore.Builder clearFulldesc() {
      fulldesc = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'labeldesc' field */
    public java.lang.CharSequence getLabeldesc() {
      return labeldesc;
    }
    
    /** Sets the value of the 'labeldesc' field */
    public code.bdif.data.avro.Datacore.Builder setLabeldesc(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.labeldesc = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'labeldesc' field has been set */
    public boolean hasLabeldesc() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'labeldesc' field */
    public code.bdif.data.avro.Datacore.Builder clearLabeldesc() {
      labeldesc = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public Datacore build() {
      try {
        Datacore record = new Datacore();
        record.label = fieldSetFlags()[0] ? this.label : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.vector = fieldSetFlags()[1] ? this.vector : (java.lang.Object) defaultValue(fields()[1]);
        record.lookupfieldpos = fieldSetFlags()[2] ? this.lookupfieldpos : (java.lang.Integer) defaultValue(fields()[2]);
        record.labelname = fieldSetFlags()[3] ? this.labelname : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.operationtype = fieldSetFlags()[4] ? this.operationtype : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.filedesc = fieldSetFlags()[5] ? this.filedesc : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.fulldesc = fieldSetFlags()[6] ? this.fulldesc : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.labeldesc = fieldSetFlags()[7] ? this.labeldesc : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
